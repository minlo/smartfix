model_id,split_date,model_name,impute_method,model_selector,eval_metric,model_params,updating_date,timestamp
055418e1-c6b8-4a3e-8d6e-9505facdebf4,2017-12-18,random_forest,directly,all_selector,58.333333333333336,"{'steps': [('pipeline_before_selector', Pipeline(steps=[('imputer', ImputationMethod(method='directly')), ('engineer', FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]))])), ('pipeline_after_selector', Pipeline(steps=[('selector', SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>)), ('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('model', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           mi...mators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False))]))], 'pipeline_before_selector': Pipeline(steps=[('imputer', ImputationMethod(method='directly')), ('engineer', FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]))]), 'pipeline_after_selector': Pipeline(steps=[('selector', SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>)), ('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('model', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           mi...mators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False))]), 'pipeline_before_selector__steps': [('imputer', ImputationMethod(method='directly')), ('engineer', FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]))], 'pipeline_before_selector__imputer': ImputationMethod(method='directly'), 'pipeline_before_selector__engineer': FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]), 'pipeline_before_selector__imputer__method': 'directly', 'pipeline_before_selector__engineer__changerate': True, 'pipeline_before_selector__engineer__diff': True, 'pipeline_before_selector__engineer__ind': [2], 'pipeline_before_selector__engineer__lag': 10, 'pipeline_before_selector__engineer__log': True, 'pipeline_before_selector__engineer__look_forward_days': 1, 'pipeline_before_selector__engineer__ma': [5], 'pipeline_after_selector__steps': [('selector', SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>)), ('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('model', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           min_impurity_split=1e-07, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False))], 'pipeline_after_selector__selector': SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>), 'pipeline_after_selector__scaler': MinMaxScaler(copy=True, feature_range=(0, 1)), 'pipeline_after_selector__model': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           min_impurity_split=1e-07, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False), 'pipeline_after_selector__selector__k': 'all', 'pipeline_after_selector__selector__score_func': <function f_classif at 0x7f51f8a3d9d8>, 'pipeline_after_selector__scaler__copy': True, 'pipeline_after_selector__scaler__feature_range': (0, 1), 'pipeline_after_selector__model__bootstrap': True, 'pipeline_after_selector__model__criterion': 'mse', 'pipeline_after_selector__model__max_depth': None, 'pipeline_after_selector__model__max_features': 'auto', 'pipeline_after_selector__model__max_leaf_nodes': None, 'pipeline_after_selector__model__min_impurity_split': 1e-07, 'pipeline_after_selector__model__min_samples_leaf': 1, 'pipeline_after_selector__model__min_samples_split': 2, 'pipeline_after_selector__model__min_weight_fraction_leaf': 0.0, 'pipeline_after_selector__model__n_estimators': 500, 'pipeline_after_selector__model__n_jobs': -1, 'pipeline_after_selector__model__oob_score': False, 'pipeline_after_selector__model__random_state': 1234, 'pipeline_after_selector__model__verbose': 0, 'pipeline_after_selector__model__warm_start': False}",20171224,1514109257721
735d6892-0b44-4c9c-a909-533e44626f34,2017-12-18,random_forest,zero,all_selector,58.333333333333336,"{'steps': [('pipeline_before_selector', Pipeline(steps=[('imputer', ImputationMethod(method='zero')), ('engineer', FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]))])), ('pipeline_after_selector', Pipeline(steps=[('selector', SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>)), ('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('model', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           mi...mators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False))]))], 'pipeline_before_selector': Pipeline(steps=[('imputer', ImputationMethod(method='zero')), ('engineer', FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]))]), 'pipeline_after_selector': Pipeline(steps=[('selector', SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>)), ('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('model', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           mi...mators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False))]), 'pipeline_before_selector__steps': [('imputer', ImputationMethod(method='zero')), ('engineer', FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]))], 'pipeline_before_selector__imputer': ImputationMethod(method='zero'), 'pipeline_before_selector__engineer': FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]), 'pipeline_before_selector__imputer__method': 'zero', 'pipeline_before_selector__engineer__changerate': True, 'pipeline_before_selector__engineer__diff': True, 'pipeline_before_selector__engineer__ind': [2], 'pipeline_before_selector__engineer__lag': 10, 'pipeline_before_selector__engineer__log': True, 'pipeline_before_selector__engineer__look_forward_days': 1, 'pipeline_before_selector__engineer__ma': [5], 'pipeline_after_selector__steps': [('selector', SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>)), ('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('model', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           min_impurity_split=1e-07, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False))], 'pipeline_after_selector__selector': SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>), 'pipeline_after_selector__scaler': MinMaxScaler(copy=True, feature_range=(0, 1)), 'pipeline_after_selector__model': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           min_impurity_split=1e-07, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False), 'pipeline_after_selector__selector__k': 'all', 'pipeline_after_selector__selector__score_func': <function f_classif at 0x7f51f8a3d9d8>, 'pipeline_after_selector__scaler__copy': True, 'pipeline_after_selector__scaler__feature_range': (0, 1), 'pipeline_after_selector__model__bootstrap': True, 'pipeline_after_selector__model__criterion': 'mse', 'pipeline_after_selector__model__max_depth': None, 'pipeline_after_selector__model__max_features': 'auto', 'pipeline_after_selector__model__max_leaf_nodes': None, 'pipeline_after_selector__model__min_impurity_split': 1e-07, 'pipeline_after_selector__model__min_samples_leaf': 1, 'pipeline_after_selector__model__min_samples_split': 2, 'pipeline_after_selector__model__min_weight_fraction_leaf': 0.0, 'pipeline_after_selector__model__n_estimators': 500, 'pipeline_after_selector__model__n_jobs': -1, 'pipeline_after_selector__model__oob_score': False, 'pipeline_after_selector__model__random_state': 1234, 'pipeline_after_selector__model__verbose': 0, 'pipeline_after_selector__model__warm_start': False}",20171224,1514109346029
62e99367-92a5-42e1-9a72-f2d7916be0d6,2017-12-18,random_forest,slinear,all_selector,50.0,"{'steps': [('pipeline_before_selector', Pipeline(steps=[('imputer', ImputationMethod(method='slinear')), ('engineer', FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]))])), ('pipeline_after_selector', Pipeline(steps=[('selector', SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>)), ('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('model', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           mi...mators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False))]))], 'pipeline_before_selector': Pipeline(steps=[('imputer', ImputationMethod(method='slinear')), ('engineer', FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]))]), 'pipeline_after_selector': Pipeline(steps=[('selector', SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>)), ('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('model', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           mi...mators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False))]), 'pipeline_before_selector__steps': [('imputer', ImputationMethod(method='slinear')), ('engineer', FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]))], 'pipeline_before_selector__imputer': ImputationMethod(method='slinear'), 'pipeline_before_selector__engineer': FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]), 'pipeline_before_selector__imputer__method': 'slinear', 'pipeline_before_selector__engineer__changerate': True, 'pipeline_before_selector__engineer__diff': True, 'pipeline_before_selector__engineer__ind': [2], 'pipeline_before_selector__engineer__lag': 10, 'pipeline_before_selector__engineer__log': True, 'pipeline_before_selector__engineer__look_forward_days': 1, 'pipeline_before_selector__engineer__ma': [5], 'pipeline_after_selector__steps': [('selector', SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>)), ('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('model', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           min_impurity_split=1e-07, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False))], 'pipeline_after_selector__selector': SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>), 'pipeline_after_selector__scaler': MinMaxScaler(copy=True, feature_range=(0, 1)), 'pipeline_after_selector__model': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           min_impurity_split=1e-07, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False), 'pipeline_after_selector__selector__k': 'all', 'pipeline_after_selector__selector__score_func': <function f_classif at 0x7f51f8a3d9d8>, 'pipeline_after_selector__scaler__copy': True, 'pipeline_after_selector__scaler__feature_range': (0, 1), 'pipeline_after_selector__model__bootstrap': True, 'pipeline_after_selector__model__criterion': 'mse', 'pipeline_after_selector__model__max_depth': None, 'pipeline_after_selector__model__max_features': 'auto', 'pipeline_after_selector__model__max_leaf_nodes': None, 'pipeline_after_selector__model__min_impurity_split': 1e-07, 'pipeline_after_selector__model__min_samples_leaf': 1, 'pipeline_after_selector__model__min_samples_split': 2, 'pipeline_after_selector__model__min_weight_fraction_leaf': 0.0, 'pipeline_after_selector__model__n_estimators': 500, 'pipeline_after_selector__model__n_jobs': -1, 'pipeline_after_selector__model__oob_score': False, 'pipeline_after_selector__model__random_state': 1234, 'pipeline_after_selector__model__verbose': 0, 'pipeline_after_selector__model__warm_start': False}",20171224,1514109288671
bb0ae734-6ab1-44dd-93ae-7ebd30aa9894,2017-12-18,random_forest,cubic,all_selector,50.0,"{'steps': [('pipeline_before_selector', Pipeline(steps=[('imputer', ImputationMethod(method='cubic')), ('engineer', FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]))])), ('pipeline_after_selector', Pipeline(steps=[('selector', SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>)), ('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('model', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           mi...mators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False))]))], 'pipeline_before_selector': Pipeline(steps=[('imputer', ImputationMethod(method='cubic')), ('engineer', FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]))]), 'pipeline_after_selector': Pipeline(steps=[('selector', SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>)), ('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('model', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           mi...mators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False))]), 'pipeline_before_selector__steps': [('imputer', ImputationMethod(method='cubic')), ('engineer', FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]))], 'pipeline_before_selector__imputer': ImputationMethod(method='cubic'), 'pipeline_before_selector__engineer': FeatureExtract(changerate=True, diff=True, ind=[2], lag=10, log=True,
        look_forward_days=1, ma=[5]), 'pipeline_before_selector__imputer__method': 'cubic', 'pipeline_before_selector__engineer__changerate': True, 'pipeline_before_selector__engineer__diff': True, 'pipeline_before_selector__engineer__ind': [2], 'pipeline_before_selector__engineer__lag': 10, 'pipeline_before_selector__engineer__log': True, 'pipeline_before_selector__engineer__look_forward_days': 1, 'pipeline_before_selector__engineer__ma': [5], 'pipeline_after_selector__steps': [('selector', SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>)), ('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('model', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           min_impurity_split=1e-07, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False))], 'pipeline_after_selector__selector': SelectKBest(k='all', score_func=<function f_classif at 0x7f51f8a3d9d8>), 'pipeline_after_selector__scaler': MinMaxScaler(copy=True, feature_range=(0, 1)), 'pipeline_after_selector__model': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None,
           min_impurity_split=1e-07, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=500, n_jobs=-1, oob_score=False, random_state=1234,
           verbose=0, warm_start=False), 'pipeline_after_selector__selector__k': 'all', 'pipeline_after_selector__selector__score_func': <function f_classif at 0x7f51f8a3d9d8>, 'pipeline_after_selector__scaler__copy': True, 'pipeline_after_selector__scaler__feature_range': (0, 1), 'pipeline_after_selector__model__bootstrap': True, 'pipeline_after_selector__model__criterion': 'mse', 'pipeline_after_selector__model__max_depth': None, 'pipeline_after_selector__model__max_features': 'auto', 'pipeline_after_selector__model__max_leaf_nodes': None, 'pipeline_after_selector__model__min_impurity_split': 1e-07, 'pipeline_after_selector__model__min_samples_leaf': 1, 'pipeline_after_selector__model__min_samples_split': 2, 'pipeline_after_selector__model__min_weight_fraction_leaf': 0.0, 'pipeline_after_selector__model__n_estimators': 500, 'pipeline_after_selector__model__n_jobs': -1, 'pipeline_after_selector__model__oob_score': False, 'pipeline_after_selector__model__random_state': 1234, 'pipeline_after_selector__model__verbose': 0, 'pipeline_after_selector__model__warm_start': False}",20171224,1514109321518
